service: media-s3-sync

provider:
  name: aws
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        Fn::Join:
           - ""
           - - "arn:aws:s3:::env:${env:AWS_S3_BUCKET}"
functions:
  create:
    handler: src/handler.create
    events:
      - existingS3:
          bucket: ${env:AWS_S3_BUCKET}
          events:
            - s3:ObjectCreated:*
    environment:
      AWS_S3_ACCESS_KEY_ID: ${env:AWS_S3_ACCESS_KEY_ID}
      AWS_S3_SECRET_ACCESS_KEY: ${env:AWS_S3_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET: ${env:AWS_S3_BUCKET}
      AWS_S3_REGION: ${env:AWS_S3_REGION}
      AWS_ELASTIC_SEARCH: ${env:AWS_ELASTIC_SEARCH}
      VERSION: ${env:VERSION}

  remove:
    handler: src/handler.remove
    events:
      - existingS3:
          bucket: ${env:AWS_S3_BUCKET}
          events:
            - s3:ObjectRemoved:*
    environment:
      AWS_S3_ACCESS_KEY_ID: ${env:AWS_S3_ACCESS_KEY_ID}
      AWS_S3_SECRET_ACCESS_KEY: ${env:AWS_S3_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET: ${env:AWS_S3_BUCKET}
      AWS_S3_REGION: ${env:AWS_S3_REGION}
      AWS_ELASTIC_SEARCH: ${env:AWS_ELASTIC_SEARCH}
      VERSION: ${env:VERSION}

  migrate:
    handler: src/handler.migrate
    events:
      - http:
          path: /migration
          method: post
    environment:
      AWS_S3_ACCESS_KEY_ID: ${env:AWS_S3_ACCESS_KEY_ID}
      AWS_S3_SECRET_ACCESS_KEY: ${env:AWS_S3_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET: ${env:AWS_S3_BUCKET}
      AWS_S3_REGION: ${env:AWS_S3_REGION}
      AWS_ELASTIC_SEARCH: ${env:AWS_ELASTIC_SEARCH}
      VERSION: ${env:VERSION}

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-existing-s3

custom:
  serverless-offline:
    port: 3010
    host: 0.0.0.0

  webpack:
    webpackConfig: internals/webpack.config.js
